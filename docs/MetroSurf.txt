Привет! Хочу порефакторить отреверсенный код экспериментального браузера MetroSurf, портирование которого начато с WP8 в UWP (использую Win. SDK 19041 и Min. Win. SDK 15063, чтобы обеспечить совместимость с ныне редкой ОС Windows 10 Mobile и ретро-смартфонами Nokia Lumia). Программа не компилируется, в ней куча ошибок. Помогите, пожалуйста,  разобраться с этой проблемой, пожалуйста. Прежде всего, часть xaml файлов порушена (вьюшки, контролы), нужно творчески исследовать названиевьюшки.cs , и попытаться воссоздать пору названиевьюшки.xaml.cs+названиевьюшки.xaml. Элементы, которые надо воссоздать в xaml. в cs файлах помечены как [GeneratedCode("Microsoft.Windows.UI.Xaml.Build.Tasks", " 4.0.0.0")] private... 

Функции, перед которыми [GeneratedCode("Microsoft.Windows.UI.Xaml.Build.Tasks", " 4.0.0.0")] [DebuggerNonUserCode] надо удалять, это артефакты декомпилятора!


Сборку производи строго командой msbuild, а не dotnet build!

msbuild  Src\MetroSurf.slnx /p:Configuration=Debug /p:Platform=x64 /t:Build

Если необходимо (при куче странных ошибок вроде System.String…) используй первоначальное восстановление пакетов командой

msbuild "Src\MetroSurf.slnx" /t:Restore


Copilot, спасибо большое!! Ты крут. Пожалуйста, продолжи восстанавливать XAML+cs для других вьюшек, помеченных полями с [GeneratedCode]. Молодец, что в класс добавляешь partial. Исли видишь, что класс наследуется не от одного класса, а еще от интерфейса, интерфейс удаляй (это тоже артефакт декомпилятора). Ну и хорошо бы в проектном файле добавлять зависимость в паре названиевьюшки.xaml.cs+названиевьюшки.xaml

Copilot, проверь сгенерированные сборкой XAML-партиалы (*.g.cs) должны быть созданы MSBuild/слоем XAML — тогда появятся окончательные InitializeComponent и именованные элемент-поля. Еще надо:
•	проверить ошибки компиляции и в ответ я могу внести правки (напр. добавить недостающие именованные элементы в XAML или поправить DataContext/ViewModel связи).
•	провести аналогичную реставрацию для других View с метками [GeneratedCode]
•	продолжить устранять ошибки компиляции с целью достижения MVP ("0 errors"), не стесняясь упрощать кое-где код.

